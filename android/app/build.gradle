def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    /*
    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword '*BaBB9rHk*GX'
            storeFile file('keystore.jks')
            storePassword '*BaBB9rHk*GX'
        }
    }

     */

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "app"

    productFlavors {
        dev {
            dimension "app"
            applicationId "com.rst.beconsent.sdk.dev"
            resValue "string", "app_name", "beConsent sdk dev"
        }
 
        prod {
            dimension "app"
            applicationId "com.rst.beconsent.sdk.android"
            resValue "string", "app_name", "beConsent sdk"
        }
    }

    buildTypes {
        debug {
            debuggable true
            //signingConfig signingConfigs.release
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            //signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
